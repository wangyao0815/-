<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper SYSTEM "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<!--非必要属性：namespace 接口全路径-->
<mapper namespace="com.atguigu.gmall.product.mapper.BaseAttrInfoMapper">
<!--
    resultMap:表示返回自定义的映射结果集：将数据库中字段与实体类的属性关联在一起
    id:表示唯一标识
    type:这个返回结果集的数据类型:判断方法 集合的泛型
    autoMapping:表示自动映射 实体类与数据库的字段名
-->
    <resultMap id="BaseAttrInfoMap" type="com.atguigu.gmall.model.product.BaseAttrInfo" autoMapping="true">
<!--
        id:表示主键
            property：实体类的属性名
            column：数据库字段名{通过sql 语句查询出来的字段名[包括给字段起的别名]}
        result:表示普通的字段
-->
        <id property="id" column="id"></id>
<!--
        mybatis 如何配置1：n
            property：实体类的属性名
            ofType:   当前多的集合数据类型
-->
        <collection property="attrValueList" ofType="com.atguigu.gmall.model.product.BaseAttrValue" autoMapping="true">
<!--
            主键:
                实体类的主键id 可以重复，但是，sql 语句映射出来的别名。不能有重复字段！在此id 重复了
-->
            <id property="id" column="attr_value_id"></id>
        </collection>
   </resultMap>
<!--    哪个方法的实现！
        id:表示方法名称
        resultMap: 表示返回自定义的映射结果集
                        通常配置1：n 或其他较为复杂关系！
        resultType: 表示具体返回的数据类型
                        表示只返回单个实体类的时候，或者明确具体是什么类型；

       mybatis 在执行sql的时候。最后；号不要！如果有分页的情况，在sql 语句后面加；sql 就执行不了！
       # and $ 区别？$:排序字段 order by ${}
       mybatis 在传递多个参数的时候，建议使用注解标识！
-->
    <select id="selectAttrInfoList" resultMap="BaseAttrInfoMap" >
        select
            bai.id,
               bai.attr_name,
               bai.category_id,
               bai.category_level,
               bav.id attr_value_id,
               bav.value_name,
               bav.attr_id
        from base_attr_info bai inner join
            base_attr_value bav on bai.id = bav.attr_id
        <where>
            <trim prefix="(" suffix=")">
                <if test="category1Id!=null and category1Id !=0">
                    (bai.category_id = #{category1Id} and bai.category_level = 1)
                </if>
                <if test="category2Id!=null and category2Id !=0">
                    or (bai.category_id = #{category2Id} and bai.category_level = 2)
                </if>
                <if test="category3Id!=null and category3Id !=0">
                    or (bai.category_id = #{category3Id} and bai.category_level = 3)
                </if>
            </trim>
        </where>
            and bai.is_deleted = 0
            and bav.is_deleted = 0
        order by bai.id,bav.id
    </select>
</mapper>
